name: Osias

# Controls when the workflow will run
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule for 3:00am CST which is 9:00am UTC
    - cron:  '0 9 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Ubuntu-18-Deploy-OpenStack:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        OPENSTACK_RELEASE: ["ussuri"]
    env:
      OPENSTACK_RELEASE: ${{ matrix.OPENSTACK_RELEASE }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Deploy OpenStack Release [${{ env.OPENSTACK_RELEASE }}]
        run: |
          public_interface=$(route -n | awk '$1 == "0.0.0.0" {print $8}')
          MY_IP=$(ip -o -4 addr list "${public_interface}" | awk '{print $4}' | cut -d/ -f1)
          source all_in_one_openstack_deployment.sh ${{ env.OPENSTACK_RELEASE }} "$MY_IP"
          echo "MULTINODE=$MULTINODE" >> $GITHUB_ENV
      - name: Bootstrap Networking
        run: |
          echo "${{ env.MULTINODE }}"
          python3 -u deploy.py bootstrap_networking --config "$MULTINODE"
      - name: Bootstrap OpenStack
        run: python3 -u deploy.py bootstrap_openstack --config "$MULTINODE"
      - name: Deploy OpenStack
        run: python3 -u deploy.py deploy_openstack --config "$MULTINODE"
      - name: Post Deploy OpenStack
        run: python3 -u deploy.py post_deploy_openstack --config "$MULTINODE"
      - name: Test Setup
        run: python3 -u deploy.py test_setup --config "$MULTINODE"
      - name: Test RefStack
        run: python3 -u deploy.py test_refstack --config "$MULTINODE"
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  Ubuntu-20-Deploy-OpenStack:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        OPENSTACK_RELEASE: ["victoria", "wallaby", "xena", "yoga"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Deploy OpenStack Release [${{ matrix.OPENSTACK_RELEASE }}]
        run: |
          public_interface=$(route -n | awk '$1 == "0.0.0.0" {print $8}')
          MY_IP=$(ip -o -4 addr list "${public_interface}" | awk '{print $4}' | cut -d/ -f1)
          source all_in_one_openstack_deployment.sh ${{ matrix.OPENSTACK_RELEASE }} "$MY_IP"
          echo "::set-env name=MULTINODE::$MULTINODE"
      - name: Bootstrap Networking
        run: python3 -u deploy.py bootstrap_networking --config "$MULTINODE"
      - name: Bootstrap OpenStack
        run: python3 -u deploy.py bootstrap_openstack --config "$MULTINODE"
      - name: Deploy OpenStack
        run: python3 -u deploy.py deploy_openstack --config "$MULTINODE"
      - name: Post Deploy OpenStack
        run: python3 -u deploy.py post_deploy_openstack --config "$MULTINODE"
      - name: Test Setup
        run: python3 -u deploy.py test_setup --config "$MULTINODE"
      - name: Test RefStack
        run: python3 -u deploy.py test_refstack --config "$MULTINODE"
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
