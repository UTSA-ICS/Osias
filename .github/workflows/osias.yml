name: Osias

# Controls when the workflow will run
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule for 3:00am CST which is 9:00am UTC
    - cron:  '0 9 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Ubuntu-20-Deploy-OpenStack:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        OPENSTACK_RELEASE: ["wallaby", "xena", "yoga"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python dependencies/packages
        run: |
          python -m pip install --upgrade pip
          pip3 install PyYAML timeout_decorator
      - name: Setup MULTINODE and configure ubuntu user [${{ matrix.OPENSTACK_RELEASE }}]
        run: |
          #
          # Get the Public interface and the IP address from it.
          #
          public_interface=$(route -n | awk '$1 == "0.0.0.0" {print $8}')
          MY_IP=$(ip -o -4 addr list "${public_interface}" | awk '{print $4}' | cut -d/ -f1)
          source setup_multinode_and_configure_ubuntu_user.sh ${{ matrix.OPENSTACK_RELEASE }} "$MY_IP"
          #
          # Remove the first entry of IP address to host mapping
          # The ansible scripts add this mapping and then we end up
          # with 2 mappings in this file. This causes <hostname -i> to
          # return 2 IP addresses which in turn fails a lookup during
          # deploy and causes nova-compute not to register.
          #
          sudo sed -i "0,/$MY_IP/{s/$MY_IP/#$MY_IP/}" /etc/hosts
          #
          # Add the MULTINODE variable to GITHUB_ENV so other steps can access it
          #
          echo 'MULTINODE<<EOF' >> $GITHUB_ENV
          echo "$MULTINODE" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Bootstrap Networking
        run: python3 -u deploy.py bootstrap_networking --config "$MULTINODE"
      - name: Bootstrap OpenStack
        run: python3 -u deploy.py bootstrap_openstack --config "$MULTINODE"
      - name: Deploy OpenStack
        run: python3 -u deploy.py deploy_openstack --config "$MULTINODE"
      - name: Post Deploy OpenStack
        run: python3 -u deploy.py post_deploy_openstack --config "$MULTINODE"
      - name: Test Setup
        run: python3 -u deploy.py test_setup --config "$MULTINODE"
      - name: Test RefStack
        run: python3 -u deploy.py test_refstack --config "$MULTINODE"
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
