default:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.7-buster
  interruptible: true
  tags:
    - docker-runner

variables:
  DEPLOY_MULTIPLE_RELEASES:
    value: "true"
    description: Flag for deployment of multiple releases or one release.
  SLEEP_FAILURE_TIME:
    value: "3600"
    description: Pipeline sleep time for failure scenarios

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  - static_analysis
  - tag_virtual_servers
  - generate_yaml
  - deploy_pipeline

shellcheck:
  stage: static_analysis
  image: pipelinecomponents/shellcheck:latest
  script:
    - |
      find . -name .git -type d -prune -o -type f -name \*.sh -print0 |
      xargs -0 -r -n1 shellcheck -e SC1091 -e SC2024 --color

python_black:
  stage: static_analysis
  image:
    name: cytopia/black
    entrypoint: ["/bin/ash", "-c"]
  script:
    - python3 -m black --check --diff --color .

generate_yaml_config:
  stage: generate_yaml
  script:
    - bash generate_yml.sh > release-test.yml
    - if [ -z "$MULTINODE" ]; then echo MULTINODE="" >> build.env; fi
  artifacts:
    paths:
      - release-test.yml
      - deploy*.yml
    reports:
      dotenv: build.env


release_testing:
  stage: deploy_pipeline
  trigger:
    include:
      - artifact: release-test.yml
        job: generate_yaml_config
    strategy: depend
  variables:
    DEPLOY_MULTIPLE_RELEASES: $DEPLOY_MULTIPLE_RELEASES
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    VM_PROFILE_CURRENT_RELEASE: $VM_PROFILE_CURRENT_RELEASE
    VM_PROFILE_PREVIOUS_RELEASE: $VM_PROFILE_PREVIOUS_RELEASE
    MULTINODE: $MULTINODE
